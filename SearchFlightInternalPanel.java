/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flight.managment.system;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import static flight.managment.system.MySqlConfigration.connect;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author monirozzaman.rony
 */
public class SearchFlightInternalPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchFlightInternalFrame
     */
    public SearchFlightInternalPanel() {
        initComponents();
        configDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        travellingDateEditText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchEditText = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchedFlightTable = new javax.swing.JTable();
        fromComboBox = new javax.swing.JComboBox<>();
        toComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Agency FB", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search Flight");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("From :");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("TO :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Traveling Date :");

        searchEditText.setText("Search");
        searchEditText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEditTextActionPerformed(evt);
            }
        });

        jButton2.setText("Refrash");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Available Flight");

        searchedFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        searchedFlightTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchedFlightTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(searchedFlightTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(fromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(toComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(searchEditText))
                        .addComponent(travellingDateEditText, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)))
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(fromComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(travellingDateEditText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchEditText)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchEditTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEditTextActionPerformed
        searchFlightFromDb();
    }//GEN-LAST:event_searchEditTextActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refrash();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchedFlightTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchedFlightTableMouseClicked
        int row = searchedFlightTable.rowAtPoint(evt.getPoint());
        int col = searchedFlightTable.columnAtPoint(evt.getPoint());
        if (row >= 0 && col >= 0) {
            String selectedFlightId = searchedFlightTable.getValueAt(row, 0).toString();
            String[] choices = {"Booking Now"};
            String input = (String) JOptionPane.showInputDialog(null, "Please, make your choice", "Setting", JOptionPane.QUESTION_MESSAGE, null, choices, choices[0]);

            switch (input.toLowerCase()) {
                case "booking now":
                    bookingFlightByFlightId(selectedFlightId);
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_searchedFlightTableMouseClicked

    private void configDisplay() {
        this.setPreferredSize(new Dimension(790, 586));
        this.setVisible(true);

        addValueInFromComboBox();
        AutoCompleteDecorator.decorate(fromComboBox);
        AutoCompleteDecorator.decorate(toComboBox);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> fromComboBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchEditText;
    private javax.swing.JTable searchedFlightTable;
    private javax.swing.JComboBox<String> toComboBox;
    private javax.swing.JTextField travellingDateEditText;
    // End of variables declaration//GEN-END:variables

    private void searchFlightFromDb() {
        showItemList(fromComboBox.getSelectedItem().toString(), toComboBox.getSelectedItem().toString(), travellingDateEditText.getText());
    }

    private void refrash() {

        travellingDateEditText.setText("");
    }

    private void addValueInFromComboBox() {
        Connection conn = MySqlConfigration.connect();

        try {
            Statement statement = (Statement) conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * From flight");

            while (resultSet.next()) {
                fromComboBox.addItem(resultSet.getString("flightFrom").toString());
                toComboBox.addItem(resultSet.getString("flightTo").toString());
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }

    public void showItemList(String from, String to, String date) {
        DefaultTableModel model = new DefaultTableModel(new String[]{"Flight Id", "Flight Title", "From", "To", "Date", "Time", "Description"}, 0);
        Connection conn = MySqlConfigration.connect();
        try {
            Statement statement = (Statement) conn.createStatement();
            ResultSet resultSet = statement.executeQuery("Select * From flight WHERE flightFrom = '" + from + "' AND flightTo = '" + to + "' AND flightDate = '" + date + "'");

            while (resultSet.next()) {
                
                model.addRow(new String[]{resultSet.getString("flightId"), resultSet.getString("flightTitle"), resultSet.getString("flightFrom"), resultSet.getString("flightTo"), resultSet.getString("flightDate"), resultSet.getString("flightTime"), resultSet.getString("description")});
            }

        } catch (SQLException ex) {
            System.err.println(ex);
        }

        searchedFlightTable.setModel(model);

    }

    private void bookingFlightByFlightId(String selectedFlightId) {
        Connection connection = MySqlConfigration.connect();
        try {
            Statement statement = (Statement) connect().createStatement();
            ResultSet rs = statement.executeQuery("Select * from flight_user WHERE userId ='" + LoggedUserDetails.loggedUserId + "' AND flightId ='" + selectedFlightId + "'");
            System.err.println(rs.isAfterLast());
            if (rs.next() == false) {
                statement.execute("INSERT INTO flight_user(userId,flightId) VALUES ('" + LoggedUserDetails.loggedUserId + "','" + selectedFlightId + "');");
                JOptionPane.showMessageDialog(null, "Booking Successful");
            } else {
                JOptionPane.showMessageDialog(null, "Already Booked This slot");
            }
            statement.close();
            MySqlConfigration.disconnect();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Somthing is worng");
            System.err.println(ex);
        }
    }
}
